=Install Next3=
This section contains instructions for installing the [[Next3 patches]].

==Add Next3 file system to the Linux kernel==
Get the Linux kernel sources and apply the next3 kernel patches:

<pre>
# tar xfj linux-2.6.31.11.tar.bz2
# cd linux-2.6.31.11
# patch -p2 < linux-2.6.31.y-next3_fs.patch
# patch -p2 < next3_snapshot-1.0.8.patch
</pre>

Build the Linux kernel and select the following configuration options:
* NEXT3_FS [y/m]
* NEXT3_FS_SNAPSHOT [y]
* NEXT3_FS_DEBUG [y]

Install the new kernel and reboot your machine (or better yet, reboot after the next step).

==Increase the limit on number of loop devices in the kernel==
Next3 snapshots use loop devices, so if you want to have more than 8 snapshots
it would be wise to increase the kernel limit on number of loop devices.
Following are some tips on how to do this:
* Add 'max_loop=256' to boot parameters
* Add 'options loop max_loop=256' to /etc/modules.conf
* Create missing /dev/loopXXX devices
* Google 'linux max_loop'

==Add Next3 support to e2fsprogs==
Get the e2fsprogs sources and apply the next3 patch:

<pre>
# tar xfz e2fsprogs-1.41.9.tar.gz
# cd e2fsprogs-1.41.9
# patch -p1 < e2fsprogs-1.41.9-next3-1.0.8.patch
</pre>

Build and install e2fsprogs.

==Install the snapshot management script==
Copy the 'snapshot' script to your system's binaries path:

<pre>
# cp snapshot /usr/sbin
# chmod +x /usr/sbin/snapshot
</pre>

=Getting started with snapshots=
Please follow the steps below to configure a Next3 volume and start using snapshots.

==Configure script parameters==
The 'snapshot' script is used to manage snapshots on a single Next3 volume.
Run the "snapshot config" command with 3 parameters:
* <block-device>: the block device to format as next3
* <mount-point>: the mount point to mount next3
* <volume-name>: descriptive name for the volume

Example:
<pre>
~ # snapshot config /dev/1/vol1 /var/vol/1 vol1
setting SNAPDEV=/dev/1/vol1
setting SNAPROOT=/var/vol/1
setting VOL=1
</pre>

Copies of the '.snapshot.conf' file will be created in your home directory and in the current directory
and will be used by the script from now on.

To manage multiple Next3 volumes, run the "snapshot config" command and subsequent snapshot control commands from the root of each Next3 volume.

==Setup a next3 volume==
Run the "snapshot mkfs" command to format and mount the volume as next3.
Alternatively, run the "snapshot install" command to convert an existing ext3 volume to next3.

Example:
<pre>
~ # snapshot mkfs
mke2fs 1.41.9-next3-1.0.8 (22-Feb-2010)
...
kjournald starting.  Commit interval 5 seconds
NEXT3 FS on dm-0, internal journal
NEXT3-fs: mounted filesystem with ordered data mode.
~ # mount
...
/dev/1/vol1 on /var/vol/1 type next3 (rw,noatime,user_xattr,acl,data=ordered)
</pre>

==Take a snapshot==
To take a snapshot named 'Monday', use the command "snapshot take Monday".
The snapshot 'Monday' will be mounted with read-only access.
To view the status of current snapshots, use the command "snapshot status".

Example:
<pre>
~ # snapshot take Monday
Taking snapshot Monday
.
~ # snapshot status
Mounted snapshots:
Filesystem           1K-blocks      Used Available Use% Mounted on
/dev/1/vol1          480713424    203016 456091492   0% /var/vol/1
/dev/snapshots/Monday/1
                     480713424    203016 456091492   0% /var/vol/snapshots/Monday/1
.
Snapshots list:
id inode attributes disk-usage mtime filename
---------------------------------------------
1 21184514 Sna---o- 172.0K Feb 9 18:51 /var/vol/1/.ctera/snapshots/Monday
.
</pre>

==Mount a snapshot==
After reboot, the snapshots are still functional, but they are not mounted automatically.
To mount snapshot 'Monday', use the command "snapshot mount Monday".
To mount all snapshots, use the command "snapshot mount".

<pre>
~ # snapshot status
Mounted snapshots:
Filesystem           1K-blocks      Used Available Use% Mounted on
/dev/1/vol1          480713424    203020 456091488   0% /var/vol/1
.
Snapshots list:
id inode attributes disk-usage mtime filename
---------------------------------------------
1 21184514 S-a----- 176.0K Feb 9 18:51 /var/vol/1/.ctera/snapshots/Monday
.
~ # snapshot mount
snapshot-debug = 1
mount: mounting /dev/1/vol1 on /var/vol/1 failed: Device or resource busy
snapshot: snapshot (1) enabled
~ # snapshot status
Mounted snapshots:
Filesystem           1K-blocks      Used Available Use% Mounted on
/dev/1/vol1          480713424    203020 456091488   0% /var/vol/1
/dev/snapshots/Monday/1
                     480713424    203016 456091492   0% /var/vol/snapshots/Monday/1
.
Snapshots list:
id inode attributes disk-usage mtime filename
---------------------------------------------
1 21184514 Sna---o- 176.0K Feb 9 18:51 /var/vol/1/.ctera/snapshots/Monday
.
</pre>

==Delete a snapshot==
Finally, to delete snapshot 'Monday', use the command "snapshot delete Monday".
But first you must make sure that the snapshot is not mounted.
To un-mount snapshot 'Monday', use the command "snapshot umount Monday".

<pre>
~ # snapshot debug 1
snapshot-debug = 1
~ # snapshot umount Monday
snapshot: snapshot (1) disabled
~ # snapshot remove Monday
snapshot: snapshot (1) marked for deletion
snapshot: snapshot (1) deactivated
snapshot: snapshot (1) deleted
~ # snapshot status
Mounted snapshots:
Filesystem           1K-blocks      Used Available Use% Mounted on
/dev/1/vol1          480713424    202844 456091664   0% /var/vol/1
.
Snapshots list:
id inode attributes disk-usage mtime filename
---------------------------------------------
1 21184514 ----s--- 0 Feb 9 18:51 /var/vol/1/.ctera/snapshots/Monday
.
</pre>

==What else?==
A few more useful commands:
* "snapshot help <cmd>" - display help on snapshot commands.
* "snapshot debug <n>" - set snapshot debug level (default=1).
* "snapshot tests" - runs a few simple sanity tests.

